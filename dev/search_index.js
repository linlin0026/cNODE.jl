var documenterSearchIndex = {"docs":
[{"location":"generator/#Parameters-for-Generalized-Lotka-Volterra-system","page":"Generate Data","title":"Parameters for Generalized Lotka-Volterra system","text":"","category":"section"},{"location":"generator/","page":"Generate Data","title":"Generate Data","text":"getParameters\ngetGLV\ngetIC","category":"page"},{"location":"generator/#cNODE.getParameters","page":"Generate Data","title":"cNODE.getParameters","text":"getParameters(\n    N::Int64,\n    C::Float64,\n    σ::Float64\n    )\n\nGet matrix of interactions A and instrisic growth rates r.\n\nArguments:\n\nN::Int64 : number of species\nC::Float64 : connectivity\nσ::Float64 : interaction strength\n\n\n\n\n\n","category":"function"},{"location":"generator/#cNODE.getIC","page":"Generate Data","title":"cNODE.getIC","text":"getIC(\n    N::Int64,\n    M::Int64\n    )\n\nGet collection of species z and numerical initial condition x₀.\n\nArguments:\n\nN::Int64 : number of species\nM::Int64 : number of communities\n\n\n\n\n\n","category":"function"},{"location":"generator/#Obtain-steady-states-from-GLV","page":"Generate Data","title":"Obtain steady states from GLV","text":"","category":"section"},{"location":"generator/","page":"Generate Data","title":"Generate Data","text":"getSteadyState","category":"page"},{"location":"generator/#cNODE.getSteadyState","page":"Generate Data","title":"cNODE.getSteadyState","text":"getSteadyState(\n    x₀::Vector,\n    τ::Float64,\n    A::Array{Float64},\n    r::Array{Float64}\n    )\n\nGet steady-state of dynamics by integrating ODE.\n\nArguments:\n\nx₀::Vector : numerical initial condition\nτ::Float64 : integration time\nA::Array{Float64} : interaction matrix\nr::Array{Float64} : intrinsic growth rates\n\n\n\n\n\n","category":"function"},{"location":"generator/#Rewire-network","page":"Generate Data","title":"Rewire network","text":"","category":"section"},{"location":"generator/","page":"Generate Data","title":"Generate Data","text":"getRewiredNetwork","category":"page"},{"location":"generator/#cNODE.getRewiredNetwork","page":"Generate Data","title":"cNODE.getRewiredNetwork","text":"getRewiredNetwork(\n    A::Array{Float64},\n    p::Float64\n    )\n\nGet rewired interaction matrix.\n\nArguments:\n\nA::Array{Float64} : interaction matrix\np::Float64 : rewiring probability\n\n\n\n\n\n","category":"function"},{"location":"generator/#Generate-synthetic-data","page":"Generate Data","title":"Generate synthetic data","text":"","category":"section"},{"location":"generator/","page":"Generate Data","title":"Generate Data","text":"generate_data","category":"page"},{"location":"generator/#cNODE.generate_data","page":"Generate Data","title":"cNODE.generate_data","text":"    generate_data(\n        N::Int64,\n        M::Int64,\n        repetitions::Int64,\n        values::Int64,\n        params::Array\n    )\n\nGenerate synthetic data for parameters in params. The function generates a number of repetitions for every value of values.\n\nArguments:\n\nN::Int64 : number of species\nM::Int64 : number of communitites\nrepetitions::Int64 : number of ecological networks\nvalues::Int64 : number of values per parameter\nparams::Array : sweeping parameters\n\n\n\n\n\n","category":"function"},{"location":"trainer/#Struct-and-dynamics-for-cNODE","page":"Use cNODE","title":"Struct and dynamics for cNODE","text":"","category":"section"},{"location":"trainer/","page":"Use cNODE","title":"Use cNODE","text":"FitnessLayer","category":"page"},{"location":"trainer/#cNODE.FitnessLayer","page":"Use cNODE","title":"cNODE.FitnessLayer","text":"FitnessLayer(\n    N::Int64\n    )\n\nLayer with N × N parameters with dynamics:\n\nfunction (L::FitnessLayer)(p)\n    f = L.W *p\n    ṗ = p .* (f - ones(size(p,1))*p'*f)\n    return ( ṗ )\nend\n\nArguments:\n\nN::Int64 : layer size on declaration\np::Array : initial condition of dynamics on run\n\n\n\n\n\n","category":"type"},{"location":"trainer/#Declare-cNODE","page":"Use cNODE","title":"Declare cNODE","text":"","category":"section"},{"location":"trainer/","page":"Use cNODE","title":"Use cNODE","text":"getModel","category":"page"},{"location":"trainer/#cNODE.getModel","page":"Use cNODE","title":"cNODE.getModel","text":"getModel(\n    N::Int64\n    )\n\nGet compositional Neural ODE (cNODE) for system of size N.\n\nArguments:\n\nN::Int64 : system size\n\n\n\n\n\n","category":"function"},{"location":"trainer/#Predict-abundances-with-cNODE-and-compute-loss","page":"Use cNODE","title":"Predict abundances with cNODE and compute loss","text":"","category":"section"},{"location":"trainer/","page":"Use cNODE","title":"Use cNODE","text":"predict\nloss","category":"page"},{"location":"trainer/#cNODE.predict","page":"Use cNODE","title":"cNODE.predict","text":"predict(\n    cnode::NeuralODE,\n    z\n    )\n\nPredict composition from normalized collection z.\n\nArguments:\n\ncnode::NeuralODE : compositional Neural ODE with FitnessLayer\nz::Array : normalized collection of species with size N×1\n\n\n\n\n\n","category":"function"},{"location":"trainer/#cNODE.loss","page":"Use cNODE","title":"cNODE.loss","text":"loss(\n    node::NeuralODE,\n    z,\n    p\n)\n\nCompute loss between predictions q = node(z) and true data p.\n\nArguments:\n\nnode::NeuralODE : neural ODE with FitnessLayer\nz::Array : normalized collection of species with size N×1\np::Array : true relative abundances, size N×1\n\n\n\n\n\n","category":"function"},{"location":"trainer/#Train-using-Meta-Learning-algorithm-Reptile","page":"Use cNODE","title":"Train using Meta-Learning algorithm Reptile","text":"","category":"section"},{"location":"trainer/","page":"Use cNODE","title":"Use cNODE","text":"train_reptile","category":"page"},{"location":"trainer/#cNODE.train_reptile","page":"Use cNODE","title":"cNODE.train_reptile","text":"train_reptile(\n    cnode::NeuralODE,\n    epochs::Int64,\n    mb::Int64,\n    LR::Array{Float64},\n    Ztrn, Ptrn,\n    Zval, Pval,\n    Ztst, Ptst,\n    report::Int64,\n    early_stoping::Int64\n)\n\nTrain cNODE using the Reptile meta-learning algorithm.\n\nArguments:\n\ncnode::NeuralODE : compositional Neural ODE to train\nepochs::Int64 : number of epochs for training\nmb::Int64 : minibatch size\nLR::Array{Float64} : array with internal and external learning rates\nZtrn, Ptrn : training data\nZval, Pval : validation data\nZtst, Ptst : test data\nreport::Int64 : interval of epochs to report\nearly_stoping::Int64 : min epochs to start early stopping\n\n\n\n\n\n","category":"function"},{"location":"loader/#Load-data","page":"Load Data","title":"Load data","text":"","category":"section"},{"location":"loader/","page":"Load Data","title":"Load Data","text":"split_data","category":"page"},{"location":"loader/#cNODE.split_data","page":"Load Data","title":"cNODE.split_data","text":"split_data(\n    Z::Array{Float64},\n    P::Array{Float64},\n    p::Float64,\n    q::Float64\n)\n\nSplit data into train, validation and test sets.\n\nArguments:\n\nZ::Array{Float64} : collections\nP::Array{Float64} : compositions\np::Float64 : percentage for training\nq::Float64 : partition into training (q%) and validation (1-q%) sets\n\n\n\n\n\n","category":"function"},{"location":"loader/#Split-data","page":"Load Data","title":"Split data","text":"","category":"section"},{"location":"loader/","page":"Load Data","title":"Load Data","text":"split_data","category":"page"},{"location":"#cNODE.jl","page":"Home","title":"cNODE.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia Package with a compositional Neural Ordinary Differential Equation","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = cNODE","category":"page"},{"location":"#Generate-Data","page":"Home","title":"Generate Data","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"generator.md\"]","category":"page"},{"location":"#Load-Data","page":"Home","title":"Load Data","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"loader.md\"]","category":"page"},{"location":"#cNODE-usage","page":"Home","title":"cNODE usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"trainer.md\"]","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
